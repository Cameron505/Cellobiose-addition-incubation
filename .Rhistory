legend.key = element_rect(size=2),
legend.key.size = unit(3, 'lines'),
panel.grid.major = element_blank(),
legend.title=element_text(size=40,colour='black'),
panel.grid.minor = element_blank(),
legend.text=element_text(size=35),
axis.title.y= element_text(size=40, colour='black'),
axis.text.y = element_text(size=40, colour='black'),
axis.ticks = element_line(colour = "black", size=2),
axis.ticks.length = unit(0.3, "cm"),
axis.title.x=element_text(size=40, colour='black'),
axis.text.x = element_text(size=40, colour='black'),
panel.border = element_rect(colour = "black", fill=NA, size=2),
plot.title = element_text( size=40, face="bold.italic"),
plot.margin=unit(c(1,1,1,1), "cm"))+
ggtitle("Soil Respiration (above freezing)")
View(CUM)
View(CUM2)
CUM<-A %>%
group_by(Cadd,Temperature,Sample) %>%
summarize(val=cumtrapz(JD2,Res.22),D=JD2)
View(CUM)
CUM$TCR<-CUM$val*12.005
View(CUM)
ggplot(CUM, aes(x=D, y=TCR, color=Add))+
stat_summary(fun.y = mean,geom = "point",lwd=4)
ggplot(CUM, aes(x=D, y=TCR, color=Cadd))+
stat_summary(fun.y = mean,geom = "point",lwd=4)
ggplot(CUM, aes(x=D, y=TCR, color=Cadd))+
stat_summary(fun.y = mean,geom = "point",lwd=4) +
stat_summary(fun.data = mean_se, geom = "errorbar", lwd=1, width = 0.5)+
facet_wrap(~Temp)
View(CUM)
View(CUM)
ggplot(CUM, aes(x=D, y=TCR, color=Cadd))+
stat_summary(fun.y = mean,geom = "point",lwd=4) +
stat_summary(fun.data = mean_se, geom = "errorbar", lwd=1, width = 0.5)+
facet_wrap(~Temperature)+
theme_light()
View(CUM)
CUM$Cadd<-as.factor(CUM$Cadd)
ggplot(CUM, aes(x=D, y=TCR, color=Cadd))+
stat_summary(fun.y = mean,geom = "point",lwd=4) +
stat_summary(fun.data = mean_se, geom = "errorbar", lwd=1, width = 0.5)+
facet_wrap(~Temperature)+
theme_light()+
scale_colour_manual(values=cbPalette)+
scale_fill_manual(values=cbPalette)+
ylab(expression(paste( " ",mu,"g-C")))+
xlab("Date")+
theme(legend.direction = 'vertical',
legend.key = element_rect(size=2),
legend.key.size = unit(3, 'lines'),
panel.grid.major = element_blank(),
legend.title=element_text(size=40,colour='black'),
panel.grid.minor = element_blank(),
legend.text=element_text(size=35),
axis.title.y= element_text(size=40, colour='black'),
axis.text.y = element_text(size=40, colour='black'),
axis.ticks = element_line(colour = "black", size=2),
axis.ticks.length = unit(0.3, "cm"),
axis.title.x=element_text(size=40, colour='black'),
axis.text.x = element_text(size=40, colour='black'),
panel.border = element_rect(colour = "black", fill=NA, size=2),
plot.title = element_text( size=40, face="bold.italic"),
plot.margin=unit(c(1,1,1,1), "cm"))+
ggtitle("Soil Respiration (above freezing)")
ggplot(CUM, aes(x=D, y=TCR, color=Cadd))+
stat_summary(fun.y = mean,geom = "point",lwd=3) +
stat_summary(fun.data = mean_se, geom = "errorbar", lwd=1, width = 0.5)+
facet_wrap(~Temperature)+
theme_light()+
scale_colour_manual(values=cbPalette)+
scale_fill_manual(values=cbPalette)+
ylab(expression(paste( " ",mu,"g-C")))+
xlab("Date")+
theme(legend.direction = 'vertical',
legend.key = element_rect(size=2),
legend.key.size = unit(3, 'lines'),
panel.grid.major = element_blank(),
legend.title=element_text(size=30,colour='black'),
panel.grid.minor = element_blank(),
legend.text=element_text(size=25),
axis.title.y= element_text(size=30, colour='black'),
axis.text.y = element_text(size=30, colour='black'),
axis.ticks = element_line(colour = "black", size=2),
axis.ticks.length = unit(0.3, "cm"),
axis.title.x=element_text(size=30, colour='black'),
axis.text.x = element_text(size=30, colour='black'),
panel.border = element_rect(colour = "black", fill=NA, size=2),
plot.title = element_text( size=30, face="bold.italic"),
plot.margin=unit(c(1,1,1,1), "cm"))+
ggtitle("Soil Respiration (above freezing)")
ggplot(CUM, aes(x=D, y=TCR, color=Cadd))+
stat_summary(fun.y = mean,geom = "point",lwd=3) +
stat_summary(fun.data = mean_se, geom = "errorbar", lwd=1, width = 0.5)+
facet_wrap(~Temperature)+
theme_light()+
scale_colour_manual(values=cbPalette)+
scale_fill_manual(values=cbPalette)+
ylab(expression(paste( " ",mu,"g-C")))+
xlab("Date")+
theme(legend.direction = 'vertical',
legend.key = element_rect(size=2),
legend.key.size = unit(3, 'lines'),
panel.grid.major = element_blank(),
legend.title=element_text(size=30,colour='black'),
panel.grid.minor = element_blank(),
legend.text=element_text(size=25),
axis.title.y= element_text(size=30, colour='black'),
axis.text.y = element_text(size=30, colour='black'),
axis.ticks = element_line(colour = "black", size=2),
axis.ticks.length = unit(0.3, "cm"),
axis.title.x=element_text(size=30, colour='black'),
axis.text.x = element_text(size=30, colour='black'),
panel.border = element_rect(colour = "black", fill=NA, size=2),
plot.title = element_text( size=30, face="bold.italic"),
plot.margin=unit(c(1,1,1,1), "cm"))+
ggtitle("Soil Respiration")
ggplot(CUM, aes(x=D, y=TCR, color=Cadd))+
stat_summary(fun.y = mean,geom = "point",lwd=3) +
stat_summary(fun.data = mean_se, geom = "errorbar", lwd=1, width = 0.5)+
facet_wrap(~Temperature)+
theme_light()+
scale_colour_manual(values=cbPalette)+
scale_fill_manual(values=cbPalette)+
ylab(expression(paste( " ",mu,"g-C")))+
xlab("Date")+
theme(legend.direction = 'vertical',
legend.key = element_rect(size=2),
legend.key.size = unit(3, 'lines'),
panel.grid.major = element_blank(),
legend.title=element_text(size=30,colour='black'),
panel.grid.minor = element_blank(),
legend.text=element_text(size=25),
axis.title.y= element_text(size=30, colour='black'),
axis.text.y = element_text(size=20, colour='black'),
axis.ticks = element_line(colour = "black", size=2),
axis.ticks.length = unit(0.3, "cm"),
axis.title.x=element_text(size=30, colour='black'),
axis.text.x = element_text(size=20, colour='black'),
panel.border = element_rect(colour = "black", fill=NA, size=2),
plot.title = element_text( size=30, face="bold.italic"),
plot.margin=unit(c(1,1,1,1), "cm"))+
ggtitle("Soil Respiration")
# custom ggplot theme
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
source("code/0-packages.R")
# source the functions
source("code/fticrrr/b-functions_analysis.R")
fticr_meta  = read.csv("data/processed/fticr_polar_meta.csv")
fticr_data_longform = read.csv("data/processed/fticr_polar_data_longform.csv")
fticr_data_trt = read.csv("data/processed/fticr_polar_trt.csv")
## SET the treatment variables
## this will work with multiple variables too. just add all the variable names in the parentheses.
TREATMENTS = dplyr::quos(Temp, Treatment)
# calculate relative abundance for each core/sample
# make sure totals add up to 100 % for each sample
# use this for stats, including PERMANOVA, PCA
relabund_cores =
fticr_data_longform %>%
compute_relabund_cores(fticr_meta, TREATMENTS)
# compute mean values per treatment combination
# use this for summary tables and bar graphs
relabund_trt =
relabund_cores %>%
group_by(!!!TREATMENTS, Class) %>%
dplyr::summarize(rel_abund = round(mean(relabund),2),
se  = round((sd(relabund/sqrt(n()))),2),
relative_abundance = paste(rel_abund, "\u00b1",se)) %>%
ungroup()  %>%
mutate(Class = factor(Class, levels = c("aliphatic", "unsaturated/lignin", "aromatic", "condensed aromatic")))
relabund_trt %>%
ggplot(aes(x = Class, y = rel_abund, fill = Treatment))+
geom_bar(stat = "identity")+
facet_grid(~Temp)+
theme_kp()
ggbiplot(pca_1$pca_int, obs.scale = 1, var.scale = 1,
groups = as.character(pca_1$grp$Temp),
ellipse = TRUE, circle = FALSE, var.axes = TRUE, alpha = 0) +
geom_point(size=5,stroke=1, alpha = 0.9,
aes(#shape = groups,
color = groups))+
#scale_shape_manual(values = c(21, 22, 19), name = "", guide = "none")+
xlim(-4,4)+
ylim(-3.5,3.5)+
labs(shape="",
title = "",
subtitle = "")+
ggtitle("")+
theme_CKM()
# all samples
pca_1 = fit_pca_function(relabund_cores)
ggbiplot(pca_1$pca_int, obs.scale = 1, var.scale = 1,
groups = as.character(pca_1$grp$Temp),
ellipse = TRUE, circle = FALSE, var.axes = TRUE, alpha = 0) +
geom_point(size=5,stroke=1, alpha = 0.9,
aes(#shape = groups,
color = groups))+
#scale_shape_manual(values = c(21, 22, 19), name = "", guide = "none")+
xlim(-4,4)+
ylim(-3.5,3.5)+
labs(shape="",
title = "",
subtitle = "")+
ggtitle("")+
theme_CKM()
ggbiplot(pca_1$pca_int, obs.scale = 1, var.scale = 1,
groups = as.character(pca_1$grp$Temp),
ellipse = TRUE, circle = FALSE, var.axes = TRUE, alpha = 0)
ggbiplot(pca_1$pca_int, obs.scale = 1, var.scale = 1,
groups = as.character(pca_1$grp$Temp),
ellipse = TRUE, circle = FALSE, var.axes = TRUE, alpha = 0, color=cbPalette) +
geom_point(size=5,stroke=1, alpha = 0.9,
aes(#shape = groups,
color = groups))+
#scale_shape_manual(values = c(21, 22, 19), name = "", guide = "none")+
xlim(-4,4)+
ylim(-3.5,3.5)+
labs(shape="",
title = "",
subtitle = "")+
ggtitle("")+
theme_CKM()
ggbiplot(pca_1$pca_int, obs.scale = 1, var.scale = 1,
groups = as.character(pca_1$grp$Temp),
ellipse = TRUE, circle = FALSE, var.axes = TRUE, alpha = 0) +
geom_point(size=5,stroke=1, alpha = 0.9,
aes(#shape = groups,
color = groups))+
scale_color_manual(cbPalette)+
#scale_shape_manual(values = c(21, 22, 19), name = "", guide = "none")+
xlim(-4,4)+
ylim(-3.5,3.5)+
labs(shape="",
title = "",
subtitle = "")+
ggtitle("")+
theme_CKM()
cbPalette
ggbiplot(pca_1$pca_int, obs.scale = 1, var.scale = 1,
groups = as.character(pca_1$grp$Temp),
ellipse = TRUE, circle = FALSE, var.axes = TRUE, alpha = 0) +
geom_point(size=5,stroke=1, alpha = 0.9,
aes(#shape = groups,
color = groups))+
scale_color_manual(values=cbPalette)+
#scale_shape_manual(values = c(21, 22, 19), name = "", guide = "none")+
xlim(-4,4)+
ylim(-3.5,3.5)+
labs(shape="",
title = "",
subtitle = "")+
ggtitle("")+
theme_CKM()
pca_1
View(pca_1)
View(pca_1)
theme_CKM <- function() {  # this for all the elements common across plots
theme_bw() %+replace%
theme(legend.position = "top",
legend.key=element_blank(),
legend.title = element_blank(),
legend.text = element_text(size = 12),
legend.key.size = unit(1.5, 'lines'),
legend.background = element_rect(colour = NA),
panel.border = element_rect(color="black",size=1.5, fill = NA),
plot.title = element_text(hjust = 0, size = 14),
axis.text = element_text(size = 10, color = "black"),
axis.title = element_text(size = 15, face = "bold", color = "black"),
# formatting for facets
panel.background = element_blank(),
strip.background = element_rect(colour="white", fill="white"), #facet formatting
panel.spacing.x = unit(1.5, "lines"), #facet spacing for x axis
panel.spacing.y = unit(1.5, "lines"), #facet spacing for x axis
strip.text.x = element_text(size=12, face="bold"), #facet labels
strip.text.y = element_text(size=12, face="bold", angle = 270) #facet labels
)
}
ggbiplot(pca_1$pca_int, obs.scale = 1, var.scale = 1,
groups = as.character(pca_1$grp$Temp),
ellipse = TRUE, circle = FALSE, var.axes = TRUE, alpha = 0) +
geom_point(size=5,stroke=1, alpha = 0.9,
aes(#shape = groups,
color = groups))+
scale_color_manual(values=cbPalette)+
#scale_shape_manual(values = c(21, 22, 19), name = "", guide = "none")+
xlim(-4,4)+
ylim(-3.5,3.5)+
labs(shape="",
title = "",
subtitle = "")+
ggtitle("")+
theme_CKM()
pca_1$pca_int
ggbiplot(pca_1$pca_int, obs.scale = 1, var.scale = 1,
groups = as.character(pca_1$grp$Temp),
ellipse = TRUE, circle = FALSE, var.axes = TRUE, alpha = 0) +
geom_point(size=5,stroke=1, alpha = 0.9,
aes(#shape = groups,
color = groups))+
scale_color_manual(values=cbPalette)+
#scale_shape_manual(values = c(21, 22, 19), name = "", guide = "none")+
xlim(-4,4)+
ylim(-3.5,3.5)+
labs(shape="",
title = "",
subtitle = "")+
ggtitle("")+
theme_CKM(base_size = 20)
theme_CKM <- function() {  # this for all the elements common across plots
theme_bw() %+replace%
theme(base_size = 20,
legend.position = "top",
legend.key=element_blank(),
legend.title = element_blank(),
legend.text = element_text(size = 12),
legend.key.size = unit(1.5, 'lines'),
legend.background = element_rect(colour = NA),
panel.border = element_rect(color="black",size=1.5, fill = NA),
plot.title = element_text(hjust = 0, size = 14),
axis.text = element_text(size = 10, color = "black"),
axis.title = element_text(size = 15, face = "bold", color = "black"),
# formatting for facets
panel.background = element_blank(),
strip.background = element_rect(colour="white", fill="white"), #facet formatting
panel.spacing.x = unit(1.5, "lines"), #facet spacing for x axis
panel.spacing.y = unit(1.5, "lines"), #facet spacing for x axis
strip.text.x = element_text(size=12, face="bold"), #facet labels
strip.text.y = element_text(size=12, face="bold", angle = 270) #facet labels
)
}
ggbiplot(pca_1$pca_int, obs.scale = 1, var.scale = 1,
groups = as.character(pca_1$grp$Temp),
ellipse = TRUE, circle = FALSE, var.axes = TRUE, alpha = 0) +
geom_point(size=5,stroke=1, alpha = 0.9,
aes(#shape = groups,
color = groups))+
scale_color_manual(values=cbPalette)+
#scale_shape_manual(values = c(21, 22, 19), name = "", guide = "none")+
xlim(-4,4)+
ylim(-3.5,3.5)+
labs(shape="",
title = "",
subtitle = "")+
ggtitle("")+
theme_CKM()
ggbiplot(pca_1$pca_int, obs.scale = 1, var.scale = 1,
groups = as.character(pca_1$grp$Temp),
ellipse = TRUE, circle = FALSE, var.axes = TRUE, alpha = 0) +
geom_point(size=5,stroke=1, alpha = 0.9,
aes(#shape = groups,
color = groups))+
update_geom_defaults("text", list(size = 6))
scale_color_manual(values=cbPalette)+
#scale_shape_manual(values = c(21, 22, 19), name = "", guide = "none")+
xlim(-4,4)+
ylim(-3.5,3.5)+
labs(shape="",
title = "",
subtitle = "")+
ggtitle("")+
theme_CKM()
ggbiplot(pca_1$pca_int, obs.scale = 1, var.scale = 1,
groups = as.character(pca_1$grp$Temp),
ellipse = TRUE, circle = FALSE, var.axes = TRUE, alpha = 0) +
geom_point(size=5,stroke=1, alpha = 0.9,
aes(#shape = groups,
color = groups))+
update_geom_defaults("text", list(size = 15))+
scale_color_manual(values=cbPalette)+
#scale_shape_manual(values = c(21, 22, 19), name = "", guide = "none")+
xlim(-4,4)+
ylim(-3.5,3.5)+
labs(shape="",
title = "",
subtitle = "")+
ggtitle("")+
theme_CKM()
theme_CKM <- function() {  # this for all the elements common across plots
theme_bw() %+replace%
theme(legend.position = "top",
legend.key=element_blank(),
legend.title = element_blank(),
legend.text = element_text(size = 12),
legend.key.size = unit(1.5, 'lines'),
legend.background = element_rect(colour = NA),
panel.border = element_rect(color="black",size=1.5, fill = NA),
plot.title = element_text(hjust = 0, size = 14),
axis.text = element_text(size = 10, color = "black"),
axis.title = element_text(size = 15, face = "bold", color = "black"),
# formatting for facets
panel.background = element_blank(),
strip.background = element_rect(colour="white", fill="white"), #facet formatting
panel.spacing.x = unit(1.5, "lines"), #facet spacing for x axis
panel.spacing.y = unit(1.5, "lines"), #facet spacing for x axis
strip.text.x = element_text(size=12, face="bold"), #facet labels
strip.text.y = element_text(size=12, face="bold", angle = 270) #facet labels
)
}
ggbiplot(pca_1$pca_int, obs.scale = 1, var.scale = 1,
groups = as.character(pca_1$grp$Temp),
ellipse = TRUE, circle = FALSE, var.axes = TRUE, alpha = 0) +
geom_point(size=5,stroke=1, alpha = 0.9,
aes(#shape = groups,
color = groups))+
update_geom_defaults("text", list(size = 15))+
scale_color_manual(values=cbPalette)+
#scale_shape_manual(values = c(21, 22, 19), name = "", guide = "none")+
xlim(-4,4)+
ylim(-3.5,3.5)+
labs(shape="",
title = "",
subtitle = "")+
ggtitle("")+
theme_CKM()
ggbiplot(pca_1$pca_int, obs.scale = 1, var.scale = 1,
groups = as.character(pca_1$grp$Temp),
ellipse = TRUE, circle = FALSE, var.axes = TRUE, alpha = 0) +
geom_point(size=5,stroke=1, alpha = 0.9,
aes(#shape = groups,
color = groups))+
update_geom_defaults("text", list(size = 25))+
scale_color_manual(values=cbPalette)+
#scale_shape_manual(values = c(21, 22, 19), name = "", guide = "none")+
xlim(-4,4)+
ylim(-3.5,3.5)+
labs(shape="",
title = "",
subtitle = "")+
ggtitle("")+
theme_CKM()
geom_point(size=5,stroke=1, alpha = 0.9,
aes(#shape = groups,
color = groups))+
ggbiplot(pca_1$pca_int, obs.scale = 1, var.scale = 1,
groups = as.character(pca_1$grp$Temp),
ellipse = TRUE, circle = FALSE, var.axes = TRUE, alpha = 0) +
update_geom_defaults("text", list(size = 25))+
scale_color_manual(values=cbPalette)+
#scale_shape_manual(values = c(21, 22, 19), name = "", guide = "none")+
xlim(-4,4)+
ylim(-3.5,3.5)+
labs(shape="",
title = "",
subtitle = "")+
ggtitle("")+
theme_CKM()
ggbiplot(pca_1$pca_int, obs.scale = 1, var.scale = 1,
groups = as.character(pca_1$grp$Temp),
ellipse = TRUE, circle = FALSE, var.axes = TRUE, alpha = 0,varname.size = 8, labels.size=10,) +
geom_point(size=5,stroke=1, alpha = 0.9,
aes(#shape = groups,
color = groups))+
update_geom_defaults("text", list(size = 25))+
scale_color_manual(values=cbPalette)+
#scale_shape_manual(values = c(21, 22, 19), name = "", guide = "none")+
xlim(-4,4)+
ylim(-3.5,3.5)+
labs(shape="",
title = "",
subtitle = "")+
ggtitle("")+
theme_CKM()
ggbiplot(pca_1$pca_int, obs.scale = 1, var.scale = 1,
groups = as.character(pca_1$grp$Temp),
ellipse = TRUE, circle = FALSE, var.axes = TRUE, alpha = 0,varname.size = 5, labels.size=10,) +
geom_point(size=5,stroke=1, alpha = 0.9,
aes(#shape = groups,
color = groups))+
update_geom_defaults("text", list(size = 25))+
scale_color_manual(values=cbPalette)+
#scale_shape_manual(values = c(21, 22, 19), name = "", guide = "none")+
xlim(-4,4)+
ylim(-3.5,3.5)+
labs(shape="",
title = "",
subtitle = "")+
ggtitle("")+
theme_CKM()
ggbiplot(pca_1$pca_int, obs.scale = 1, var.scale = 1,
groups = as.character(pca_1$grp$Temp),
ellipse = TRUE, circle = FALSE, var.axes = TRUE, alpha = 0,varname.size = 2, labels.size=10,) +
geom_point(size=5,stroke=1, alpha = 0.9,
aes(#shape = groups,
color = groups))+
update_geom_defaults("text", list(size = 25))+
scale_color_manual(values=cbPalette)+
#scale_shape_manual(values = c(21, 22, 19), name = "", guide = "none")+
xlim(-4,4)+
ylim(-3.5,3.5)+
labs(shape="",
title = "",
subtitle = "")+
ggtitle("")+
theme_CKM()
ggbiplot(pca_1$pca_int, obs.scale = 1, var.scale = 1,
groups = as.character(pca_1$grp$Temp),
ellipse = TRUE, circle = FALSE, var.axes = TRUE, alpha = 0,varname.size = 3, labels.size=10,) +
geom_point(size=5,stroke=1, alpha = 0.9,
aes(#shape = groups,
color = groups))+
update_geom_defaults("text", list(size = 25))+
scale_color_manual(values=cbPalette)+
#scale_shape_manual(values = c(21, 22, 19), name = "", guide = "none")+
xlim(-4,4)+
ylim(-3.5,3.5)+
labs(shape="",
title = "",
subtitle = "")+
ggtitle("")+
theme_CKM()
